/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    //    id 'eclipse'
    // id("org.jetbrains.intellij") version "1.17.3"
}

group = "de.rthillmann.SolarMonitoring"
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {

    // If using JUnit Jupiter
    testImplementation("org.junit.jupiter:junit-jupiter:5.9.2")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.11.0'

    //    
    // Logging
    //
	implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.16'
	implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.5.12'
	implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.12'

}

/* java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}
*/
java {
    sourceCompatibility = "16"
    targetCompatibility = "17"
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

test {
    // Enable JUnit 5 (Gradle 4.6+).
    useJUnitPlatform()

    // Always run tests, even when nothing changed.
    dependsOn 'cleanTest'

    // Show test results.
    testLogging {
        events "passed", "skipped", "failed"
    }
}

//compileJava {
//    options.compilerArgs << '-Xlint:deprecation'
//}

jar {
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes(
            'Main-Class': 'de.rthillmann.solarmonitoring.SolarMonitoring'
        )
    }
}

tasks.register('runExecutableJar', JavaExec) {
	group = 'Solarmonitoring'
    description = 'Run from jar-file'
    // Executable jars can have only _one_ jar on the classpath.
    classpath = files(tasks.jar)

    // 'main' does not need to be specified

    // arguments to pass to the application
    args = [
            "192.168.178.55"
    ]
}

extensions.findByName("buildScan")?.with {

    setProperty("termsOfServiceUrl", "https://gradle.com/terms-of-service")

    setProperty("termsOfServiceAgree", "yes")

}

tasks.build.doFirst {
    println "used jdk path: " + System.getenv('JAVA_HOME')
}
